import LoggerTag from "../h1/j1"; import { currentTimeMillis } from "../k1/k2"; const y8 = 10; const z8 = 3 * 60 * 60 * 1000; const a9 = 30 * 60 * 1000; const b9 = "downgrade_time"; const c9 = "downgrade_index"; const d9 = [ [60 * 1000, 0, y8], [2 * 60 * 1000, 5, 1], [4 * 60 * 1000, 5, 1], [8 * 60 * 1000, 4, 1], [16 * 60 * 1000, 2, 1] ]; export class CongestionController { constructor(i9) { this.tableIndex = 0; this.hasSendCount = 0; this.lastSendTime = 0; this.continueSuccessSendCount = 0; this.lastGradeChangeTime = 0; this.sdkContext = i9; let j9 = i9.kvStore().get(c9, 0); if (currentTimeMillis() - j9 < z8) { this.tableIndex = i9.kvStore().get(c9, 0); } else { i9.kvStore() .delete(b9) .delete(c9, true); } this.sdkContext.appLogLogger().debug("CongestionController constructor, index: {}", LoggerTag.NETWORK, this.tableIndex); } isCanSend() { if (!this.enable()) { this.sdkContext.appLogLogger().debug("CongestionController isCanSend true, because close", LoggerTag.NETWORK); return true; } let h9 = currentTimeMillis(); if ((h9 - this.lastSendTime) >= d9[this.tableIndex][0]) { this.hasSendCount = 1; this.lastSendTime = h9; } else if (this.hasSendCount < d9[this.tableIndex][2]) { this.hasSendCount++; } else { this.sdkContext.appLogLogger().debug("CongestionController isCanSend false", LoggerTag.NETWORK); return false; } this.sdkContext.appLogLogger().debug("CongestionController isCanSend true", LoggerTag.NETWORK); return true; } handleException() { if (!this.enable()) { return; } if (this.tableIndex < d9.length - 1) { this.downgrade(); } else { this.continueSuccessSendCount = 0; } this.sdkContext.appLogLogger().warn("CongestionController handleException", LoggerTag.NETWORK); } handleSuccess() { if (!this.enable()) { return; } let g9 = currentTimeMillis(); if (this.continueSuccessSendCount >= d9[this.tableIndex][1] || (g9 - this.lastGradeChangeTime) > a9) { if (this.tableIndex > 0) { this.upgrade(); } } else { this.continueSuccessSendCount++; } this.sdkContext.appLogLogger().debug("CongestionController handleSuccess", LoggerTag.NETWORK); } upgrade() { let f9 = currentTimeMillis(); this.tableIndex--; this.hasSendCount = 1; this.continueSuccessSendCount = 1; this.lastSendTime = f9; this.lastGradeChangeTime = f9; this.sdkContext.kvStore() .put(b9, f9) .put(c9, this.tableIndex); this.sdkContext.appLogLogger().debug("CongestionController upgrade, index: {}", LoggerTag.NETWORK, this.tableIndex); } downgrade() { let e9 = currentTimeMillis(); this.tableIndex++; this.hasSendCount = 1; this.continueSuccessSendCount = 0; this.lastSendTime = e9; this.lastGradeChangeTime = e9; this.sdkContext.kvStore() .put(b9, e9) .put(c9, this.tableIndex); this.sdkContext.appLogLogger().warn("CongestionController downgrade, index: {}", LoggerTag.NETWORK, this.tableIndex); } enable() { return true; } } 