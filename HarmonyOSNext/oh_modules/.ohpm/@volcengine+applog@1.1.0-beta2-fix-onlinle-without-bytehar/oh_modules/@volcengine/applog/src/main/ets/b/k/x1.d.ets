import common from '@ohos.app.ability.common'; import Dispatcher from "./m"; import Topic from "./l"; import { DispatcherCallback, StickyTopicParam, TopicParam } from "../k3"; declare class OhosDispatcher extends Dispatcher { eventHub: common.EventHub; instanceKey: string; emitTopicMap: Map<Topic, StickyTopicParam>; constructor(w8: common.Context, x8: string); on(u8: Topic, v8: DispatcherCallback): void; once(q8: Topic, r8: DispatcherCallback): void; off(o8: Topic, p8?: DispatcherCallback): void; emit(m8: Topic, n8?: TopicParam): void; emitAsync(k8: Topic, l8?: TopicParam): void; stickyOn(i8: Topic, j8: DispatcherCallback): void; stickyOnce(g8: Topic, h8: DispatcherCallback): void; private hasReceiveTopic; private lastReceiveTopicParam; } export default OhosDispatcher; 