import { BaseWorker } from "../a2/g2"; import { ISDKContext } from "../d/f1"; import { CongestionController } from "../u1/r2"; import { EventJson } from "../k3"; import Response from "../u1/h3"; export declare const EVENT_INTERVAL_DEFAULT: number; export declare const RETRY_INTERVALS: number[]; export declare class Sender extends BaseWorker { congestionController: CongestionController; eventInterval: number; workName: string; constructor(n4: ISDKContext); prepareWork(): void; registerAppLogApplicationStateChangeCallback(k4: ISDKContext, l4: Sender): void; getWorkName(): string; getRequestUrl(): string; requestWorker(): Promise<void>; sendEventPack(): Promise<boolean>; parseResponse(t3: Response): void; buildEventRequestBody(o3: EventJson[], p3: EventJson[], q3: EventJson[]): string; getRetryIntervals(): number[]; } export declare function checkEventSsidReady(q2: EventJson[], r2: ISDKContext, s2: string): Promise<void>; 