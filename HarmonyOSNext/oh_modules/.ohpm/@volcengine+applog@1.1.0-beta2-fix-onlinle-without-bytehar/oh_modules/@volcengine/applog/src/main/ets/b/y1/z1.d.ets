import p14 from '@ohos.data.preferences'; import common from '@ohos.app.ability.common'; import { Callback } from '@ohos.base'; import AppLogLogger from "../h1/n1"; export interface IKVStore { get<T extends p14.ValueType>(key: string, defaultValue: T): T; put<T extends p14.ValueType>(key: string, value: T): IKVStore; put<T extends p14.ValueType>(key: string, value: T, isFlush: boolean): IKVStore; delete(key: string, isFlush?: boolean): IKVStore; listenerDataChange(callback: Callback<string>): void; } export declare class DefaultKVStore implements IKVStore { preferences: p14.Preferences; constructor(y14: common.Context, z14: string, a15: AppLogLogger); get<d65 extends p14.ValueType>(w14: string, x14: d65): d65; put<c65 extends p14.ValueType>(t14: string, u14: c65): IKVStore; delete(r14: string, s14?: boolean): IKVStore; listenerDataChange(q14: Callback<string>): void; } 