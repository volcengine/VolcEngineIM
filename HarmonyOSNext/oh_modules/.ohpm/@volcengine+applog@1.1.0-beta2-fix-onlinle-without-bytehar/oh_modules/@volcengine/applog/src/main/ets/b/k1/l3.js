import abilityAccessCtrl from "@ohos.abilityAccessCtrl"; import bundleManager from "@ohos.bundle.bundleManager"; import LoggerTag from "../h1/j1"; export async function getTokenId(v16) { let w16 = 0; try { let z16 = await bundleManager.getBundleInfoForSelf(bundleManager.BundleFlag.GET_BUNDLE_INFO_WITH_APPLICATION); w16 = z16.appInfo.accessTokenId; } catch (x16) { const y16 = x16; v16.error("Failed to getTokenId", y16, LoggerTag.HEADER); } v16.debug("GetTokenId tokenId: {}", LoggerTag.HEADER, w16); return w16; } export async function checkPermission(p16, q16) { let r16 = abilityAccessCtrl.createAtManager(); let s16 = abilityAccessCtrl.GrantStatus.PERMISSION_DENIED; try { s16 = await r16.checkAccessToken(await getTokenId(p16), q16); } catch (t16) { const u16 = t16; p16.error("Failed to checkPermission {}.", u16, LoggerTag.HEADER, q16); } if (s16 == abilityAccessCtrl.GrantStatus.PERMISSION_DENIED) { p16.warn("CheckPermission permissions: {} grantStatus: GrantStatus.PERMISSION_DENIED", LoggerTag.HEADER, q16); } else { p16.debug("CheckPermission permissions: {} grantStatus: GrantStatus.PERMISSION_GRANTED", LoggerTag.HEADER, q16); } return s16 == abilityAccessCtrl.GrantStatus.PERMISSION_GRANTED; } 