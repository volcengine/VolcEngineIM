import LoggerTag from "../../b/h1/j1"; import { isRecordEmpty } from "../../b/k1/r1"; import { isEmpty } from "../../b/k1/l1"; import BasePlugin from "../o"; import { ProfileController } from "./t3"; export default class Profile extends BasePlugin { constructor(p28) { super(p28); this.profileController = new ProfileController(p28); } pluginName() { return Profile.pluginName; } set(o28) { if (isRecordEmpty(o28)) { this.sdkContext.appLogLogger().debug("ProfileSet param profile record is empty, return", LoggerTag.PROFILE); } else { this.profileController.profileSet(o28); } } setOnce(n28) { if (isRecordEmpty(n28)) { this.sdkContext.appLogLogger().debug("ProfileSetOnce param profile record is empty, return", LoggerTag.PROFILE); } else { this.profileController.profileSetOnce(n28); } } increment(m28) { if (isRecordEmpty(m28)) { this.sdkContext.appLogLogger().debug("ProfileIncrement param profile record is empty, return", LoggerTag.PROFILE); } else { this.profileController.profileIncrement(m28); } } append(l28) { if (isRecordEmpty(l28)) { this.sdkContext.appLogLogger().debug("ProfileAppend param profile record is empty, return", LoggerTag.PROFILE); } else { this.profileController.profileAppend(l28); } } unset(k28) { if (isEmpty(k28)) { this.sdkContext.appLogLogger().debug("ProfileUnset param key is empty, return", LoggerTag.PROFILE); } else { this.profileController.profileUnset(k28); } } disablePlugin() { this.sdkContext.appLogLogger().warn("unsupported disable profile plugin.", LoggerTag.SESSION); } } Profile.pluginName = "plugin:profile"; 