import { DefaultNetworkClient } from "../u1/v1"; import { HeaderManager } from "../o1/p1/w1"; import OhosDispatcher from "../k/x1"; import { DefaultKVStore } from "../y1/z1"; import WorkEngine from "../a2/b2"; import EventProcessor from "../h/c2"; import PluginCenter from "../d2"; export class SDKContext { constructor(d, e, f, g) { this.rawContext = d; this.initConfig = e; this.instanceKey = f; this.logger = g; this.messageDispatcher = new OhosDispatcher(d, f); this.kVStore = new DefaultKVStore(d, this.instanceKey, g); this.engine = new WorkEngine(this); this.header = new HeaderManager(this); this.processor = new EventProcessor(this); this.http = new DefaultNetworkClient(this); this.runtimeUriConfig = e.getUri(); this.plugin = new PluginCenter(this); } pluginCenter() { return this.plugin; } eventProcessor() { return this.processor; } workEngine() { return this.engine; } sdkConfig() { return this.initConfig; } sdkInstanceKey() { return this.instanceKey; } kvStore() { return this.kVStore; } context() { return this.rawContext; } headerManager() { return this.header; } networkClient() { return this.http; } appLogLogger() { return this.logger; } dispatcher() { return this.messageDispatcher; } } 