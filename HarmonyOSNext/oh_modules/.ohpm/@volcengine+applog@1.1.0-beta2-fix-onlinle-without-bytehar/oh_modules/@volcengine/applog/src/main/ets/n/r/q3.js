import JsBridge from "./o3"; import { AppLogHelper, calcInstanceKey } from "../../b/g1"; class t21 { osName() { return JsBridge.osName; } setNativeAppId(m24) { let n24 = calcInstanceKey(m24); if (AppLogHelper.queryInstance(n24)) { let o24; if (t21.jsBridgeInstanceMap.has(n24)) { o24 = t21.jsBridgeInstanceMap.get(n24); } else { o24 = new JsBridge(n24); t21.jsBridgeInstanceMap.set(n24, o24); } t21.jsBridgeInstance = o24; } } setUserUniqueId(l24) { t21.jsBridgeInstance?.setUserUniqueId(l24); } setHeaderInfo(k24) { t21.jsBridgeInstance?.setHeaderInfo(k24); } addHeaderInfo(i24, j24) { t21.jsBridgeInstance?.addHeaderInfo(i24, j24); } removeHeaderInfo(h24) { t21.jsBridgeInstance?.removeHeaderInfo(h24); } onEventV3(f24, g24) { t21.jsBridgeInstance?.onEventV3(f24, g24); } profileSet(c24) { try { let e24 = JSON.parse(c24); t21.jsBridgeInstance?.profileSet(e24); } catch (d24) { } } profileSetOnce(z23) { try { let b24 = JSON.parse(z23); t21.jsBridgeInstance?.profileSetOnce(b24); } catch (a24) { } } profileIncrement(w23) { try { let y23 = JSON.parse(w23); t21.jsBridgeInstance?.profileIncrement(y23); } catch (x23) { } } profileAppend(t23) { try { let v23 = JSON.parse(t23); t21.jsBridgeInstance?.profileAppend(v23); } catch (u23) { } } profileUnset(s23) { t21.jsBridgeInstance?.profileUnset(s23); } getAbSdkVersion() { return t21.jsBridgeInstance?.getAbSdkVersion() ?? ''; } getABTestConfigValueForKey(q23, r23) { return t21.jsBridgeInstance?.getABTestConfigValueForKey(q23, r23) ?? r23; } getAllAbTestConfigs() { return t21.jsBridgeInstance?.getAllAbTestConfigs() ?? {}; } } t21.jsBridgeInstance = null; t21.jsBridgeInstanceMap = new Map(); export default t21; 