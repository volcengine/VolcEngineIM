import LoggerTag from "../../b/h1/j1"; import { BaseWorker, RETRY_SAME } from "../../b/a2/g2"; import Topic from "../../b/k/l"; import { KEY_DEVICE_PLATFORM } from "../../b/o1/p1/q1"; import { HARMONY_OS } from "../../b/o1/p1/w1"; export const INTERVAL_UPDATE_AB = 10 * 60 * 1000; export default class ABTestWorker extends BaseWorker { constructor(n21) { super(n21, LoggerTag.ABTEST); this.workName = 'work:ab_test'; } getWorkName() { return this.workName; } getRequestUrl() { return this.sdkContext.runtimeUriConfig.getAbTestUri().concat(`?${KEY_DEVICE_PLATFORM}=${HARMONY_OS}`); } parseResponse(k21) { if (k21 && k21.httpStatusCode == 200) { let l21 = JSON.parse(k21.result); let m21 = l21["data"]; this.notifyRemoteABTestConfigGet(m21); this.postDelayRequestWork(INTERVAL_UPDATE_AB); } else { this.sdkContext.appLogLogger().warn("ABTest response parse failed, {}...", LoggerTag.ABTEST, k21); this.requestWorkFailed(); } } getAbTestConfig() { this.clearDelayTask(); this.requestWorker(); } notifyRemoteABTestConfigGet(j21) { this.sdkContext.dispatcher().emit(Topic.ABTestConfigReady, j21); } getRetryIntervals() { return RETRY_SAME; } } 