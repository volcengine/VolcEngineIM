import LoggerTag from "../../h1/j1"; import Topic from "../../k/l"; import { generateUUID } from "../../k1/w2"; import { currentTimeMillis } from "../../k1/k2"; export class TopicInterceptor { async intercept(j10) { let k10 = j10.getRequest(); let l10 = currentTimeMillis(); let m10 = generateUUID(); j10.getSdkContext().dispatcher().emit(Topic.NetworkRequestStart, { "request_task_id": m10, "start_time_ms": l10, "request": k10 }); j10.getSdkContext().appLogLogger().debug("TopicInterceptor intercept, before deal request: {}", LoggerTag.NETWORK, k10); let n10 = await j10.proceed(k10); j10.getSdkContext().dispatcher().emit(Topic.NetworkRequestEnd, { "request_task_id": m10, "end_time_ms": currentTimeMillis() - l10, "response": n10 }); j10.getSdkContext().appLogLogger().debug("TopicInterceptor intercept, after deal request: {}", LoggerTag.NETWORK, k10); return n10; } } 