import { IWsChannelClient, WsCallback, WsConnectionConfig } from './IWsChannelClient';
import { INetworkChangeCallback } from './WsNetworkChangeNotifier';
export declare class OhosChannelClient implements IWsChannelClient, INetworkChangeCallback {
    private static readonly TAG;
    private wsConnection;
    private callback;
    private url;
    private config;
    private connState;
    private reconnectTimes;
    private reconnectTimeoutId;
    private isStoppedConnection;
    private static MAX_RECONNECT_TIMES;
    private static BACKOFF_TIMEOUT_SECONDS;
    private static DEFAULT_PING_INTERVAL;
    private static textDecoder;
    constructor(u6: WsCallback);
    destroy(): void;
    netAvailable(t6: number): void;
    private destroyConnection;
    private initWsConnection;
    initClient(): void;
    isConnected(): boolean;
    isConnecting(): boolean;
    isClosing(): boolean;
    openConnectionInternal(a6: WsConnectionConfig, b6: boolean): Promise<boolean>;
    openConnection(z5: WsConnectionConfig): Promise<boolean>;
    stopConnection(): Promise<boolean>;
    onParameterChange(y5: WsConnectionConfig): Promise<boolean>;
    sendMessage(v5: ArrayBuffer | string): Promise<boolean>;
    private closeConnection;
    private wsReconnect;
    private resetReconnectTimes;
    private delayWsReconnect;
    private resetReconnectTimer;
    private getDelaySeconds;
    private resetReconnectConfig;
}
