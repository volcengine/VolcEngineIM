import { TTJson } from "./p/n1"; export class TTNetworkError extends Error { constructor(message) { super(message); this.statusCode = -1; this.netErrorCode = 0; this.responseError = ''; this.requestLog = ''; this.errMessage = message; } setErrorMessage(message) { this.errMessage = message; } getErrorMessage() { return this.errMessage; } setHttpStatusCode(code) { this.statusCode = code; } getHttpStatusCode() { return this.statusCode; } setNetErrorCode(error) { this.netErrorCode = error; } getNetErrorCode() { return this.netErrorCode; } setResponseError(error) { this.responseError = error; } getResponseError() { if (typeof this.responseError === 'object') { return TTJson.stringify(this.responseError); } return this.responseError; } setResponseHeaders(headers) { this.responseHeaders = headers; } getResponseHeaders() { return this.responseHeaders; } setRequestLog(error) { this.requestLog = error; } getRequestLog() { return this.requestLog; } setOriginalError(err) { this.originalError = err; } getOriginalError() { return this.originalError; } } TTNetworkError.ERR_CANCELED_BY_USER = "Request is canceled by user."; TTNetworkError.ERR_CANCELED_CODE = -999; TTNetworkError.ERR_UNSUPPORTED_REDIRECT_MSG = "Not follow the redirect."; TTNetworkError.ERR_UNSUPPORTED_REDIRECT_CODE = -998; 