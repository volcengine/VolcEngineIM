import { Response } from "../ttnet/a/b"; export class CronetResponseCallbackImpl { constructor(callback, call) { this.callback = callback; this.call = call; } onHeaderComplete(b6) { const c6 = this.call.parseHeaders(b6.getHttpHeaders()); this.callback.onHeaderComplete(c6); const response = new Response(this.call.getUrl(), b6.getStatusCode(), c6, "", this.call.getLodId(), b6.getRequestLog()); this.callback.onResponseStart(response); } onDataComplete(buffer) { this.callback.onDataComplete(buffer); } async onSucceed(y5) { try { let a6 = this.call.parseHeaders(y5.getHttpHeaders()); let response = new Response(this.call.getUrl(), y5.getStatusCode(), a6, "", this.call.getLodId(), y5.getRequestLog()); await this.call.processResponseAfterExecute(response); this.call.monitorApiOk(response); this.callback.onSucceed(response); } catch (error) { const z5 = this.call.createTTNetworkError(error, y5); this.call.monitorApiError(z5); this.callback.onError(error); } } onError(error) { this.call.monitorApiError(error); this.callback.onError(error); } } 