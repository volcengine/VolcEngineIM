import List from '@ohos.util.List'; import { Header } from "../a/d"; export declare class HttpRequestInfo { private static readonly TAG; private static readonly SERVER_TIMING_HEADER; private static readonly X_TT_PREFIX_HEADER; url: string; isApiOk: boolean; netError: number; httpCode: number; startTime: number; endTime: number; requestDuration: number; method: string; logId: string; errMsg: string; responseHeaders?: List<Header>; requestLog: string; apiData?: object; resolveDuration: number; rejectDuration: number; covertDuration: number; dispatchForCookieDuration: number; addCookieHeaderDuration: number; saveResponseCookieDuration: number; saveRedirectCookieDuration: number; bizData: Map<string, string | number | object>; constructor(url: string); computeRequestDuration(): void; generateApiData(): void; private getApiTimingInfo; private generateRequestLog; private getBaseInfo; private getOtherInfo; private getRequestTiming; private getResponseInfo; private getHeadersInfo; toString(): string; } export declare abstract class ApiRequestMonitorHook { abstract monitorApiOk(p17: HttpRequestInfo): any; abstract monitorApiError(o17: HttpRequestInfo): any; } export declare class TTApiRequestMonitor { private static sApiRequestMonitor?; static setApiRequestMonitor(monitor: ApiRequestMonitorHook): void; static getApiRequestMonitor(): ApiRequestMonitorHook | undefined; } 