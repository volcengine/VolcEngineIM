import { TobAppConstants } from "./e2"; import { TobAppCerts } from "./d2"; import buffer from "@ohos.buffer"; import { CronetAppProvider } from "../../cronet/o"; export class TobCronetDependAdapter extends CronetAppProvider { loggerDebug() { return true; } getContext() { return TobAppConstants.context; } getDeviceId() { return "987654321"; } getUserId() { return "123"; } getAppId() { return String(TobAppConstants.APP_ID); } getAppName() { return TobAppConstants.APP_NAME; } getChannel() { return TobAppConstants.CHANNEL_NAME; } getVersionCode() { return TobAppConstants.VERSION_CODE; } getVersionName() { return TobAppConstants.VERSION_NAME; } getUpdateVersionCode() { return TobAppConstants.UPDATE_VERSION_CODE; } getTTNetServiceDomainMap() { const f14 = new Map(); f14.set(TobAppConstants.DOMAIN_HTTPDNS_KEY, "dig.bdurl.net"); f14.set(TobAppConstants.DOMAIN_BOE_KEY, ".boe-gateway.byted.org"); return f14; } getGetDomainDependHostMap() { const e14 = new Map(); e14.set('first', TobAppConstants.tncFirstHost); e14.set('second', TobAppConstants.tncSecondHost); e14.set('third', TobAppConstants.tncThirdHost); return e14; } getGetDomainDefaultJSON() { return TobAppConstants.getDomainDefaultJson; } getOpaqueData() { if (!TobAppConstants.enableOpaque) { return null; } let z13 = new Array(); let a14 = TobAppCerts.base64Certs; for (let b14 = 0; b14 < a14.length; b14++) { const c14 = buffer.from(a14[b14], 'base64'); const d14 = Array.from(new Uint8Array(c14.buffer)); z13.push(d14); } return z13; } } TobCronetDependAdapter.INSTANCE = new TobCronetDependAdapter(); 