if (!("finalizeConstruction" in ViewPU.prototype)) { Reflect.set(ViewPU.prototype, "finalizeConstruction", () => { }); } export class MainPage extends ViewPU { constructor(parent, params, __localStorage, elmtId = -1, paramsLambda = undefined, extraInfo) { super(parent, __localStorage, elmtId, extraInfo); if (typeof paramsLambda === "function") { this.paramsGenerator_ = paramsLambda; } this.i = new ObservedPropertySimplePU('Hello World', this, "message"); this.setInitiallyProvidedValue(params); this.finalizeConstruction(); } setInitiallyProvidedValue(params) { if (params.message !== undefined) { this.message = params.message; } } updateStateVars(params) { } purgeVariableDependenciesOnElmtId(rmElmtId) { this.i.purgeDependencyOnElmtId(rmElmtId); } aboutToBeDeleted() { this.i.aboutToBeDeleted(); SubscriberManager.Get().delete(this.id__()); this.aboutToBeDeletedInternal(); } get message() { return this.i.get(); } set message(newValue) { this.i.set(newValue); } initialRender() { this.observeComponentCreation2((elmtId, isInitialRender) => { Row.create(); Row.height('100%'); }, Row); this.observeComponentCreation2((elmtId, isInitialRender) => { Column.create(); Column.width('100%'); }, Column); this.observeComponentCreation2((elmtId, isInitialRender) => { Text.create(this.message); Text.fontSize(50); Text.fontWeight(FontWeight.Bold); }, Text); Text.pop(); Column.pop(); Row.pop(); } rerender() { this.updateDirtyElements(); } } 