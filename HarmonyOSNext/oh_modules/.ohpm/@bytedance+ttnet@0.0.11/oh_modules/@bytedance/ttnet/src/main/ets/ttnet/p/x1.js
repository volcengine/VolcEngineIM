import preferences from "@ohos.data.preferences"; import { CronetAppProviderManager } from "../../cronet/r"; export class PrefStorage { constructor(g16, h16) { this.repoName = g16; this.preference = h16; } getRepoName() { return this.repoName; } setValue(f16, value) { this.preference.putSync(f16, value); this.preference.flush(); } contains(key) { return this.preference.hasSync(key); } removeValue(key) { this.preference.deleteSync(key); this.preference.flush(); } getNumber(key, defaultValue = 0) { return this.preference.getSync(key, defaultValue); } getString(key, defaultValue = "") { return this.preference.getSync(key, defaultValue); } getBoolean(key, defaultValue = false) { return this.preference.getSync(key, defaultValue); } clear() { this.preference.clearSync(); this.preference.flush(); } removeRepo() { const context = CronetAppProviderManager.inst().getContext(); preferences.deletePreferences(context, this.repoName); } } export class PrefUtils { static getPreferenceRepo(e16) { const context = CronetAppProviderManager.inst().getContext(); const options = { name: e16 }; return new PrefStorage(e16, preferences.getPreferencesSync(context, options)); } } 