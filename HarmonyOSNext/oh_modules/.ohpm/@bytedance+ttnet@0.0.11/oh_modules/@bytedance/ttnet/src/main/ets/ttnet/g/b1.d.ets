import { Request } from "../a/c"; import { JsonStorage } from "../p/q"; import { Response } from "../a/b"; export declare class ClientKeyManager { private static readonly TAG; private static sInstance?; private static clientKeyTncEnabled; private enableClientKey; private updateHostList; private updatePathList; private clientKey; private sessionId; private sessionUrl; private kmsVersion; private clientKeyHeaders; private kvStorage?; private static readonly CLIENT_KEY_CONFIG_FILE_NAME; private static readonly CLIENT_KEY_CONFIG_NAME; private static readonly CLIENT_KEY_NAME; private static readonly SESSION_ID_NAME; private static readonly SESSION_URL_NAME; private static readonly KMS_VERSION_NAME; private static readonly CLIENT_KEY_REQUEST_HEADER_NAME; private static readonly CLIENT_KEY_RESPONSE_HEADER_NAME; private static readonly KMS_VERSION_REQUEST_HEADER_NAME; private static readonly KMS_VERSION_RESPONSE_HEADER_NAME; private static readonly MAX_AGE_NAME; private static readonly SESSION_TIME_NAME; private static readonly HEADER_SPLIT_STRING; private static readonly RESPONSE_CLIENT_KEY_DEFAULT; private static readonly RESPONSE_CLIENT_KEY_INVALID; private static readonly RESPONSE_CLIENT_KEY_SAME_NULL; private static readonly RESPONSE_CLIENT_KEY_NULL; private constructor(); static getInstance(): ClientKeyManager; setEnableClientKeyManager(enable: boolean): void; initClientKeyAndSessionInfo(): Promise<void>; addClientKeyHeader(request: Request): Request; onTNCConfigUpdated(p11: JsonStorage): void; UpdateClientKeyAndSessionInfo(response: Response): void; getClientKeyHeaders(): Map<string, string>; private parseClientKeyConfig; private constructClientKeyHeaders; private replaceMaxAgeTime; private updateCookieInfo; private static constructClientKeyHeaders; } 