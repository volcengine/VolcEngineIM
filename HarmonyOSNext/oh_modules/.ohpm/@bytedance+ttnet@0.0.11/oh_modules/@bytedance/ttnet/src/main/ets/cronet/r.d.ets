import { JsonStorage } from "../ttnet/p/q"; import { CronetAppProvider } from "./o"; export declare class CronetAppProviderManager { private static instance; private cronetAppProvider?; private constructor(); static inst(): CronetAppProviderManager; setAdapter(a1: CronetAppProvider): void; loggerDebug(): boolean; getContext(): Context; getUserId(): string; getAppId(): string; getDeviceId(): string; getAppName(): string; getChannel(): string; getDevicePlatform(): string; getTTNetServiceDomainMap(): Map<string, string>; getGetDomainDependHostMap(): Map<string, string>; getOSApi(): string; getNetAccessType(): string; getVersionCode(): string; getDeviceType(): string; getSdkAppId(): string; getSdkVersion(): string; getOSVersion(): string; getAbi(): string; getDeviceBrand(): string; getDeviceModel(): string; getVersionName(): string; getUpdateVersionCode(): string; getManifestVersionCode(): string; getStoreIdc(): string; getRegion(): string; getSysRegion(): string; getCarrierRegion(): string; getGetDomainDefaultJSON(): string; getIsDropFirstTnc(): string; getOpaqueData(): Array<number[]> | null; getClientOpaqueData(): Map<string[], [ Array<number>, Array<number> ]> | null; getTNCRequestHeader(): Map<string, string> | null; getTNCRequestQuery(): Map<string, string> | null; getTNCRequestFlags(): string; getHttpDnsRequestFlags(): string; isEnableQuic(): boolean; isEnableHttp2(): boolean; isEnableBrotli(): boolean; getQuicHint(): Map<string, [ number, number ]> | null; isBOEProxyEnabled(): boolean; getBypassBOEJSON(): string; getStoreIdcRuleJSON(): string; getProxyConfig(): string; onTNCConfigUpdated(u: JsonStorage): void; } 