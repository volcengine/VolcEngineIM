import util from "@ohos.util"; import { TTLogger } from "./l1"; export function contactStr2Ab(n16, o16) { let p16 = 0; let q16 = []; for (let x16 = 0; x16 < n16.length; ++x16) { q16.push(str2ab(n16[x16])); p16 += q16[x16].byteLength; } let buf = new ArrayBuffer(p16 + o16.byteLength); let r16 = new Uint8Array(buf); let s16 = new Uint8Array(o16); for (let w16 = 0; w16 < o16.byteLength; ++w16) { r16[w16] = s16[w16]; } let index = o16.byteLength; for (let t16 of q16) { let u16 = new Uint8Array(t16); for (let v16 = 0; v16 < t16.byteLength; ++v16) { r16[index++] = u16[v16]; } } return buf; } export function str2ab(str) { if (str.length === 0) { return new ArrayBuffer(0); } let m16 = new util.TextEncoder("utf-8"); return m16.encodeInto(str); } export function wildcardMatch(pattern, input) { try { const k16 = pattern .replace(/\./g, '\\.') .replace(/\*/g, '.*') .replace(/\?/g, '.'); const l16 = new RegExp(`^${k16}$`); return l16.test(input); } catch (e) { TTLogger.debug("wildcardMatch", e); } return false; } 