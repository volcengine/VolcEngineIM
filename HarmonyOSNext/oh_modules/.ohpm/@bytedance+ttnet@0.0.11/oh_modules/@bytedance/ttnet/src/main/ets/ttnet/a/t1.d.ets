import { TTResponseCallback } from "../n"; import { TypedOutput } from "../t/u"; import { Request } from "./c"; import { Response } from "./b"; export interface Call { execute<T>(): Promise<Response<string | object | ArrayBuffer>>; executeInStreamCallback(callback: TTResponseCallback): void; executeUploadInStream<T>(output: TypedOutput): Promise<Response<string | object | ArrayBuffer>>; executeBothInStream(output: TypedOutput, callback: TTResponseCallback): void; isExecuted(): boolean; cancel(): void; isCanceled(): boolean; request(): Request; } 