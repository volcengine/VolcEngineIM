import { JsonStorage } from "../ttnet/p/q"; export declare abstract class CronetAppProvider { abstract loggerDebug(): boolean; abstract getContext(): Context; abstract getDeviceId(): string; abstract getUserId(): string; abstract getAppId(): string; abstract getAppName(): string; abstract getChannel(): string; abstract getVersionCode(): string; abstract getVersionName(): string; abstract getUpdateVersionCode(): string; abstract getTTNetServiceDomainMap(): Map<string, string>; getDevicePlatform(): string; getSdkAppId(): string; getSdkVersion(): string; getManifestVersionCode(): string; getAbVersion(): string; getAbClient(): string; getAbFlag(): string; getAbFeature(): string; getSsmix(): string; getRticket(): string; getNetAccessType(): string; getCityName(): string; getDeviceType(): string; getDeviceBrand(): string; getDeviceModel(): string; getAbi(): string; getOSApi(): string; getOSVersion(): string; getLanguage(): string; getDPI(): string; getResolution(): string; getStoreIdc(): string; getRegion(): string; getSysRegion(): string; getCarrierRegion(): string; getGetDomainDependHostMap(): Map<string, string>; getGetDomainDefaultJSON(): string; getIsDropFirstTnc(): string; getClientOpaqueData(): Map<string[], [ Array<number>, Array<number> ]> | null; getTNCRequestHeader(): Map<string, string> | null; getTNCRequestQuery(): Map<string, string> | null; getTNCRequestFlags(): string; getHttpDnsRequestFlags(): string; isEnableQuic(): boolean; isEnableHttp2(): boolean; isEnableBrotli(): boolean; getQuicHint(): Map<string, [ number, number ]> | null; isBOEProxyEnabled(): boolean; getBypassBOEJSON(): string; getStoreIdcRuleJSON(): string; getProxy(): string; onTNCConfigUpdated(t: JsonStorage): void; getOpaqueData(): Array<number[]> | null; } 