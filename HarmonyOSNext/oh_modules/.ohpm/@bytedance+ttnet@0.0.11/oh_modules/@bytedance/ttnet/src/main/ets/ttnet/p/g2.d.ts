interface q17 { buffer: string; f1: number; length: number; state: number[]; } export declare class Md5 { static hashStr(str: string, d16?: false): string; static hashStr(str: string, d16: true): Int32Array; static hashArray(arr: Uint8Array, c16?: false): string; static hashArray(arr: Uint8Array, c16: true): Int32Array; static hashAsciiStr(str: string, b16?: false): string; static hashAsciiStr(str: string, b16: true): Int32Array; private static stateIdentity; private static buffer32Identity; private static hexChars; private static hexOut; private static onePassHasher; private static _hex; private static _md5cycle; private _dataLength; private _bufferLength; private _state; private _buffer; private _buffer8; private _buffer32; constructor(); start(): this; appendStr(str: string): this; appendAsciiStr(str: string): this; appendByteArray(input: Uint8Array): this; getState(): q17; setState(state: q17): void; end(a15?: boolean): string | Int32Array; } export {}; 