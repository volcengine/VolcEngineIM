import { BIMConversation, BIMLiveConversationListener, BIMLiveGroupMarkTypeListener, BIMLiveGroupMemberEventListener, im_proto } from '../../../../../Index';
import { IMSdkContext } from '../../client/IMSdkContext';
import { LiveLifeManager } from '../life/LiveLifeManager';
import { PingInfo } from '../ping/LiveLifePingManager';
export declare class LiveLifeEventManager {
    private TAG;
    private static TYPE_LIVE_MEMBER_JOIN;
    private static TYPE_LIVE_MEMBER_LEAVE;
    private static TYPE_LIVE_OWNER_UPDATE;
    private static TYPE_LIVE_CORE_INFO_UPDATE;
    private static TYPE_LIVE_MESSAGE_DELETE;
    private static TYPE_LIVE_DISSOLVE;
    private static TYPE_LIVE_SILENT;
    private static TYPE_LIVE_ADMIN_UPDATE;
    private static TYPE_LIVE_MEMBER_UPDATE;
    private static TYPE_LIVE_MARK_TYPE_UPDATE;
    private static TYPE_LIVE_BATCH_UPDATE_MEMBER;
    private memberListener;
    private conversationListener;
    private markTypeListener;
    private conversation;
    private liveLifeManager;
    private bimClient;
    constructor(sdkContext: IMSdkContext, manager: LiveLifeManager, conversation: BIMConversation, memberListener: BIMLiveGroupMemberEventListener, conversationListener: BIMLiveConversationListener, markTypeListener: BIMLiveGroupMarkTypeListener);
    log(content: string): void;
    handleCmd(body: im_proto.IMessageBody): boolean;
    private convert;
    private batchConvertInner;
    private convertInner;
    private convertList;
    private handleBatchUpdateMember;
    private handlerMemberJoined;
    private handleMemberLeft;
    private handleSilent;
    handleAdminUpdate(body: im_proto.IMessageBody): void;
    handlerMemberUpdate(body: im_proto.IMessageBody): void;
    handleOwnerUpdate(body: im_proto.IMessageBody): void;
    handleUpdateConversationCoreInfo(body: im_proto.IMessageBody): void;
    handlerUpdateConversationDissolve(body: im_proto.IMessageBody): void;
    handlerMessageDelete(body: im_proto.IMessageBody): void;
    onPingEvent(pingInfo: PingInfo): void;
    getConversation(): BIMConversation;
}
