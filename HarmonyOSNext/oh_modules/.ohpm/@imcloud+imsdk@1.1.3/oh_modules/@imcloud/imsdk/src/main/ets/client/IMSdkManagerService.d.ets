import { CommonHelper } from '../helper/CommonHelper';
import { CommandMessageManager } from '../manager/CommandMessageManager';
import { ConversationProcessManager } from '../manager/ConversationProcessManager';
import { KVStoreManager } from '../manager/KVStoreManager';
import { LeakMsgRepairManager } from '../manager/LeakMsgRepairManager';
import { MessageProcessManager } from '../manager/MessageProcessManager';
import { SimpleDataManager } from '../manager/SimpleDataManager';
import { IConversationOperator } from '../model/operator/IConversationOperator';
import { IMessageOperator } from '../model/operator/IMessageOperator';
import { ObserverManager } from '../observer/ObserverManager';
import { SeqIdManager } from '../request/RequestItem';
import { RequestManager } from '../request/RequestManager';
import { InboxTypeService } from '../service/InboxTypeService';
import { PreferencesService } from '../service/PreferencesService';
import { IMRdbManager } from '../storage/rdb/IMRdbManager';
import { ConversationUtils } from '../utils/ConversationUtils';
import { MessageUtil } from '../utils/MessageUtil';
import { StrangerUtil } from '../utils/StrangerUtil';
import { IMSdkContext } from './IMSdkContext';
export declare class IMSdkManagerService {
    protected readonly context: IMSdkContext;
    private _requestManager?;
    private _seqIdManager?;
    private _inboxTypeService?;
    private _preferencesService?;
    private _messageOperator?;
    private _conversationOperator?;
    private _commandMessageManager?;
    private _messageProcessManager?;
    private _conversationProcessManager?;
    private _commonHelper?;
    private _simpleDataManager?;
    private _observerManager?;
    private _kVStoreManager?;
    private _rdbManager?;
    private _leakMsgRepairManager?;
    constructor(context: IMSdkContext);
    get requestManager(): RequestManager;
    get seqIdManager(): SeqIdManager;
    get inboxTypeService(): InboxTypeService;
    get preferencesService(): PreferencesService;
    get messageService(): IMessageOperator;
    get conversationService(): IConversationOperator;
    get commandMessageManager(): CommandMessageManager;
    get messageProcessManager(): MessageProcessManager;
    get strangerUtil(): StrangerUtil;
    get messageUtil(): MessageUtil;
    get leakMsgRepairManager(): LeakMsgRepairManager;
    get conversationUtil(): ConversationUtils;
    get conversationProcessManager(): ConversationProcessManager;
    get commonHelper(): CommonHelper;
    get simpleDataManager(): SimpleDataManager;
    get observerManager(): ObserverManager;
    get kVStoreManager(): KVStoreManager;
    get rdbManager(): IMRdbManager;
}
